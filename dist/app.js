"use strict";angular.module("Dragon",["ui.router","Dragon.character"]).config(["$stateProvider","$locationProvider",function(r,a){a.html5Mode(!0),r.state("dragon",{controller:"DragonCtrl",resolve:{_characters:["CharacterFactory",function(r){return r.getCharacters().then(function(){return r.characters})}]},templateUrl:"/app/app.html",url:"/"})}]),angular.module("Dragon.character",[]).config(["$stateProvider",function(r){r.state("dragon.character",{controller:"CharacterCtrl",resolve:{_character:["$stateParams","CharacterFactory",function(r,a){return a.getCharacter(r.characterName).then(function(){return a.character})}]},templateUrl:"/app/character/character.html",url:"^/character/:characterName"})}]),angular.module("Dragon").controller("DragonCtrl",["$scope","CharacterFactory",function(r,a){r.characters=a.characters}]),angular.module("Dragon.character").controller("CharacterCtrl",["$scope","CharacterFactory",function(r,a){r.character=a.character,console.log(r.character)}]),angular.module("Dragon.character").factory("CharacterFactory",["$http","$q",function(r,a){return{character:null,characters:null,getCharacter:function(t){var c=this;return c.character&&c.character.character_name===t?a.when(c.character):r.get("/v1/character/"+t).success(function(r){c.character=r[0]})},getCharacters:function(){var t=this;return t.characters?a.when(t.characters):r.get("/v1/character").success(function(r){t.characters=r})}}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9hcHAuanMiLCJjaGFyYWN0ZXIvX2NoYXJhY3Rlci5qcyIsImFwcC1jb250cm9sbGVyLmpzIiwiY2hhcmFjdGVyL2NoYXJhY3Rlci1jb250cm9sbGVyLmpzIiwiY2hhcmFjdGVyL2NoYXJhY3Rlci1mYWN0b3J5LmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb25maWciLCIkc3RhdGVQcm92aWRlciIsIiRsb2NhdGlvblByb3ZpZGVyIiwiaHRtbDVNb2RlIiwic3RhdGUiLCJjb250cm9sbGVyIiwicmVzb2x2ZSIsIl9jaGFyYWN0ZXJzIiwiQ2hhcmFjdGVyRmFjdG9yeSIsImdldENoYXJhY3RlcnMiLCJ0aGVuIiwiY2hhcmFjdGVycyIsInRlbXBsYXRlVXJsIiwidXJsIiwiX2NoYXJhY3RlciIsIiRzdGF0ZVBhcmFtcyIsImdldENoYXJhY3RlciIsImNoYXJhY3Rlck5hbWUiLCJjaGFyYWN0ZXIiLCIkc2NvcGUiLCJjb25zb2xlIiwibG9nIiwiZmFjdG9yeSIsIiRodHRwIiwiJHEiLCJzZWxmIiwidGhpcyIsImNoYXJhY3Rlcl9uYW1lIiwid2hlbiIsImdldCIsInN1Y2Nlc3MiLCJjaGFyYWN0ZXJEYXRhIiwiY2hhcmFjdGVyc0RhdGEiXSwibWFwcGluZ3MiOiJBQUFBLFlBRUFBLFNBQUFDLE9BQUEsVUFHQSxZQUdBLHFCQUVBQyxRQUFBLGlCQUFBLG9CQUFBLFNBQUFDLEVBQUFDLEdBRUFBLEVBQUFDLFdBQUEsR0FFQUYsRUFDQUcsTUFBQSxVQUNBQyxXQUFBLGFBQ0FDLFNBQ0FDLGFBQUEsbUJBQUEsU0FBQUMsR0FDQSxNQUFBQSxHQUFBQyxnQkFDQUMsS0FBQSxXQUNBLE1BQUFGLEdBQUFHLGdCQUlBQyxZQUFBLGdCQUNBQyxJQUFBLFNDekJBZixRQUFBQyxPQUFBLHVCQUNBQyxRQUFBLGlCQUFBLFNBQUFDLEdBRUFBLEVBQ0FHLE1BQUEsb0JBQ0FDLFdBQUEsZ0JBQ0FDLFNBQ0FRLFlBQUEsZUFBQSxtQkFBQSxTQUFBQyxFQUFBUCxHQUNBLE1BQUFBLEdBQUFRLGFBQUFELEVBQUFFLGVBQ0FQLEtBQUEsV0FDQSxNQUFBRixHQUFBVSxlQUlBTixZQUFBLGdDQUNBQyxJQUFBLGtDQ2ZBZixRQUFBQyxPQUFBLFVBQ0FNLFdBQUEsY0FBQSxTQUFBLG1CQUFBLFNBQUFjLEVBQUFYLEdBQ0FXLEVBQUFSLFdBQUFILEVBQUFHLGNDRkFiLFFBQUFDLE9BQUEsb0JBQ0FNLFdBQUEsaUJBQUEsU0FBQSxtQkFBQSxTQUFBYyxFQUFBWCxHQUNBVyxFQUFBRCxVQUFBVixFQUFBVSxVQUNBRSxRQUFBQyxJQUFBRixFQUFBRCxjQ0hBcEIsUUFBQUMsT0FBQSxvQkFDQXVCLFFBQUEsb0JBQUEsUUFBQSxLQUFBLFNBQUFDLEVBQUFDLEdBQ0EsT0FJQU4sVUFBQSxLQUNBUCxXQUFBLEtBRUFLLGFBQUEsU0FBQUMsR0FDQSxHQUFBUSxHQUFBQyxJQUNBLE9BQUFELEdBQUFQLFdBQUFPLEVBQUFQLFVBQUFTLGlCQUFBVixFQUNBTyxFQUFBSSxLQUFBSCxFQUFBUCxXQUNBSyxFQUFBTSxJQUFBLGlCQUFBWixHQUNBYSxRQUFBLFNBQUFDLEdBQ0FOLEVBQUFQLFVBQUFhLEVBQUEsTUFJQXRCLGNBQUEsV0FDQSxHQUFBZ0IsR0FBQUMsSUFDQSxPQUFBRCxHQUFBZCxXQUNBYSxFQUFBSSxLQUFBSCxFQUFBZCxZQUNBWSxFQUFBTSxJQUFBLGlCQUNBQyxRQUFBLFNBQUFFLEdBQ0FQLEVBQUFkLFdBQUFxQiIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdEcmFnb24nLCBbXG5cbiAgICAvLyBBcHBsaWNhdGlvbiBkZXBlbmRlbmNpZXNcbiAgICAndWkucm91dGVyJyxcblxuICAgIC8vIE1vZHVsZXNcbiAgICAnRHJhZ29uLmNoYXJhY3Rlcidcbl0pXG4gICAgLmNvbmZpZyhbJyRzdGF0ZVByb3ZpZGVyJywgJyRsb2NhdGlvblByb3ZpZGVyJywgZnVuY3Rpb24gKCRzdGF0ZVByb3ZpZGVyLCAkbG9jYXRpb25Qcm92aWRlcikge1xuXG4gICAgICAgICRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcblxuICAgICAgICAkc3RhdGVQcm92aWRlclxuICAgICAgICAgICAgLnN0YXRlKCdkcmFnb24nLCB7XG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ0RyYWdvbkN0cmwnLFxuICAgICAgICAgICAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgICAgICAgICAgICAgX2NoYXJhY3RlcnM6IFsnQ2hhcmFjdGVyRmFjdG9yeScsIGZ1bmN0aW9uIChDaGFyYWN0ZXJGYWN0b3J5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gQ2hhcmFjdGVyRmFjdG9yeS5nZXRDaGFyYWN0ZXJzKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBDaGFyYWN0ZXJGYWN0b3J5LmNoYXJhY3RlcnM7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1dXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9hcHAvYXBwLmh0bWwnLFxuICAgICAgICAgICAgICAgIHVybDogJy8nXG4gICAgICAgICAgICB9KTtcbiAgICB9XSk7IiwiXG5hbmd1bGFyLm1vZHVsZSgnRHJhZ29uLmNoYXJhY3RlcicsIFtdKVxuICAgIC5jb25maWcoWyckc3RhdGVQcm92aWRlcicsIGZ1bmN0aW9uICgkc3RhdGVQcm92aWRlcikge1xuXG4gICAgICAgICRzdGF0ZVByb3ZpZGVyXG4gICAgICAgICAgICAuc3RhdGUoJ2RyYWdvbi5jaGFyYWN0ZXInLCB7XG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ0NoYXJhY3RlckN0cmwnLFxuICAgICAgICAgICAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgICAgICAgICAgICAgX2NoYXJhY3RlcjogWyckc3RhdGVQYXJhbXMnLCAnQ2hhcmFjdGVyRmFjdG9yeScsIGZ1bmN0aW9uICgkc3RhdGVQYXJhbXMsIENoYXJhY3RlckZhY3RvcnkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBDaGFyYWN0ZXJGYWN0b3J5LmdldENoYXJhY3Rlcigkc3RhdGVQYXJhbXMuY2hhcmFjdGVyTmFtZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBDaGFyYWN0ZXJGYWN0b3J5LmNoYXJhY3RlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfV1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL2FwcC9jaGFyYWN0ZXIvY2hhcmFjdGVyLmh0bWwnLFxuICAgICAgICAgICAgICAgIHVybDogJ14vY2hhcmFjdGVyLzpjaGFyYWN0ZXJOYW1lJ1xuICAgICAgICAgICAgfSk7XG4gICAgfV0pOyIsIlxuYW5ndWxhci5tb2R1bGUoJ0RyYWdvbicpXG4gICAgLmNvbnRyb2xsZXIoJ0RyYWdvbkN0cmwnLCBbJyRzY29wZScsICdDaGFyYWN0ZXJGYWN0b3J5JywgZnVuY3Rpb24gKCRzY29wZSwgQ2hhcmFjdGVyRmFjdG9yeSkge1xuICAgICAgICAkc2NvcGUuY2hhcmFjdGVycyA9IENoYXJhY3RlckZhY3RvcnkuY2hhcmFjdGVycztcbiAgICB9XSk7IiwiXG5hbmd1bGFyLm1vZHVsZSgnRHJhZ29uLmNoYXJhY3RlcicpXG4gICAgLmNvbnRyb2xsZXIoJ0NoYXJhY3RlckN0cmwnLCBbJyRzY29wZScsICdDaGFyYWN0ZXJGYWN0b3J5JywgZnVuY3Rpb24gKCRzY29wZSwgQ2hhcmFjdGVyRmFjdG9yeSkge1xuICAgICAgICAkc2NvcGUuY2hhcmFjdGVyID0gQ2hhcmFjdGVyRmFjdG9yeS5jaGFyYWN0ZXI7XG4gICAgICAgIGNvbnNvbGUubG9nKCRzY29wZS5jaGFyYWN0ZXIpO1xuICAgIH1dKTsiLCJcbmFuZ3VsYXIubW9kdWxlKCdEcmFnb24uY2hhcmFjdGVyJylcbiAgICAuZmFjdG9yeSgnQ2hhcmFjdGVyRmFjdG9yeScsIFsnJGh0dHAnLCAnJHEnLCBmdW5jdGlvbiAoJGh0dHAsICRxKSB7XG4gICAgICAgIHJldHVybiB7XG5cbiAgICAgICAgICAgIC8qIC0tLSBDaGFyYWN0ZXIgQVBJIC0tLSAqL1xuXG4gICAgICAgICAgICBjaGFyYWN0ZXI6IG51bGwsXG4gICAgICAgICAgICBjaGFyYWN0ZXJzOiBudWxsLFxuXG4gICAgICAgICAgICBnZXRDaGFyYWN0ZXI6IGZ1bmN0aW9uIChjaGFyYWN0ZXJOYW1lKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLmNoYXJhY3RlciAmJiBzZWxmLmNoYXJhY3Rlci5jaGFyYWN0ZXJfbmFtZSA9PT0gY2hhcmFjdGVyTmFtZSA/XG4gICAgICAgICAgICAgICAgICAgICRxLndoZW4oc2VsZi5jaGFyYWN0ZXIpIDpcbiAgICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCcvdjEvY2hhcmFjdGVyLycgKyBjaGFyYWN0ZXJOYW1lKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24gKGNoYXJhY3RlckRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmNoYXJhY3RlciA9IGNoYXJhY3RlckRhdGFbMF07XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIGdldENoYXJhY3RlcnM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlbGYuY2hhcmFjdGVycyA/XG4gICAgICAgICAgICAgICAgICAgICRxLndoZW4oc2VsZi5jaGFyYWN0ZXJzKSA6XG4gICAgICAgICAgICAgICAgICAgICRodHRwLmdldCgnL3YxL2NoYXJhY3RlcicpXG4gICAgICAgICAgICAgICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbiAoY2hhcmFjdGVyc0RhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmNoYXJhY3RlcnMgPSBjaGFyYWN0ZXJzRGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1dKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=